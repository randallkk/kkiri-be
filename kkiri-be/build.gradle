plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.11'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
    // querydsl
    id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
}

group = 'com.lets'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    // querydsl
    querydsl.extendsFrom compileClasspath
}

repositories {
    mavenCentral()
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.session:spring-session-data-redis'

    // 파이어베이스 관련 gradle
    implementation 'com.google.firebase:firebase-admin:9.1.1'
    implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '4.2.2'
    testImplementation 'org.projectlombok:lombok:1.18.22'

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.projectlombok:lombok:1.18.26'

    implementation 'org.springframework.boot:spring-boot-starter-reactor-netty:2.6.4'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.4.1'
    implementation 'org.webjars:sockjs-client:1.5.1'
    implementation 'org.webjars:stomp-websocket:2.3.4'
    implementation 'org.webjars:webjars-locator-core:0.46'
    implementation 'org.springframework.boot:spring-boot-starter-amqp:2.6.4'

    // querydsl
    implementation 'com.querydsl:querydsl-jpa:5.0.0'
    implementation 'com.querydsl:querydsl-apt:5.0.0'

    // jwt
    implementation 'io.jsonwebtoken:jjwt:0.9.1'

    // mongodb
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

    //thyemleaf
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'

    // aws
    implementation 'com.amazonaws:aws-java-sdk-s3:1.12.232'

}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.named('asciidoctor') {
    inputs.dir snippetsDir
    dependsOn test
}

tasks {
    processResources {
        duplicatesStrategy = DuplicatesStrategy.INCLUDE
    }
}

def querydslDir = "$buildDir/generated/querydsl"

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}

sourceSets {
    main.java.srcDir querydslDir
    main {
        resources {
            srcDirs ("src/main/resources")
        }
    }
}

compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}

jar {
    enabled = false
    duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
}
